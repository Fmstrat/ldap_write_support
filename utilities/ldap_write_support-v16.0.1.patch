diff --git a/apps/provisioning_api/lib/Controller/UsersController.php b/apps/provisioning_api/lib/Controller/UsersController.php
index c7625a26f5973ead458bb2de529a86852a581f06..fd5efe6b4a2dc6fa3e786fe1159b27bbb6a3234a 100644
--- a/apps/provisioning_api/lib/Controller/UsersController.php
+++ b/apps/provisioning_api/lib/Controller/UsersController.php
@@ -46,7 +46,6 @@ use OCP\IGroup;
 use OCP\IGroupManager;
 use OCP\ILogger;
 use OCP\IRequest;
-use OCP\IUser;
 use OCP\IUserManager;
 use OCP\IUserSession;
 use OCP\L10N\IFactory;
@@ -196,6 +195,21 @@ class UsersController extends AUserData {
 		]);
 	}
 
+	/**
+	 * @throws OCSException
+	 */
+	private function createNewUserId(): string {
+		$attempts = 0;
+		do {
+			$uidCandidate = $this->secureRandom->generate(10, ISecureRandom::CHAR_HUMAN_READABLE);
+			if (!$this->userManager->userExists($uidCandidate)) {
+				return $uidCandidate;
+			}
+			$attempts++;
+		} while ($attempts < 10);
+		throw new OCSException('Could not create non-existing user id', 111);
+	}
+
 	/**
 	 * @PasswordConfirmationRequired
 	 * @NoAdminRequired
@@ -223,6 +237,10 @@ class UsersController extends AUserData {
 		$isAdmin = $this->groupManager->isAdmin($user->getUID());
 		$subAdminManager = $this->groupManager->getSubAdmin();
 
+		if(empty($userid) && $this->config->getAppValue('core', 'newUser.generateUserID', 'no') === 'yes') {
+			$userid = $this->createNewUserId();
+		}
+
 		if ($this->userManager->userExists($userid)) {
 			$this->logger->error('Failed addUser attempt: User already exists.', ['app' => 'ocs_api']);
 			throw new OCSException('User already exists', 102);
@@ -275,6 +293,10 @@ class UsersController extends AUserData {
 			$generatePasswordResetToken = true;
 		}
 
+		if ($email === '' && $this->config->getAppValue('core', 'newUser.requireEmail', 'no') === 'yes') {
+			throw new OCSException('Required email address was not provided', 110);
+		}
+
 		try {
 			$newUser = $this->userManager->createUser($userid, $password);
 			$this->logger->info('Successful addUser call with userid: ' . $userid, ['app' => 'ocs_api']);
@@ -315,7 +337,7 @@ class UsersController extends AUserData {
 				}
 			}
 
-			return new DataResponse();
+			return new DataResponse(['UserID' => $userid]);
 
 		} catch (HintException $e ) {
 			$this->logger->logException($e, [
diff --git a/apps/user_ldap/lib/Access.php b/apps/user_ldap/lib/Access.php
index 1044938446e167e839c396c6fa1159cc85a71aee..62be63bc02b865b9a141234c4fe6f09fcb976fe8 100644
--- a/apps/user_ldap/lib/Access.php
+++ b/apps/user_ldap/lib/Access.php
@@ -635,7 +635,7 @@ class Access extends LDAPUtility {
 		return false;
 	}
 
-	protected function mapAndAnnounceIfApplicable(
+	public function mapAndAnnounceIfApplicable(
 		AbstractMapping $mapper,
 		string $fdn,
 		string $name,
diff --git a/apps/user_ldap/lib/Group_LDAP.php b/apps/user_ldap/lib/Group_LDAP.php
index cd4bd18cb4465629d9db98e2e35cb2d8ff7c6152..b9c652efb3a121f523368013cce94234a1a52a7f 100644
--- a/apps/user_ldap/lib/Group_LDAP.php
+++ b/apps/user_ldap/lib/Group_LDAP.php
@@ -109,7 +109,7 @@ class Group_LDAP extends BackendUtility implements \OCP\GroupInterface, IGroupLD
 		$members = $this->access->connection->getFromCache($cacheKeyMembers);
 		if(!is_null($members)) {
 			$this->cachedGroupMembers[$gid] = $members;
-			$isInGroup = in_array($userDN, $members);
+			$isInGroup = in_array($userDN, $members, true);
 			$this->access->connection->writeToCache($cacheKey, $isInGroup);
 			return $isInGroup;
 		}
@@ -129,7 +129,6 @@ class Group_LDAP extends BackendUtility implements \OCP\GroupInterface, IGroupLD
 
 		//usually, LDAP attributes are said to be case insensitive. But there are exceptions of course.
 		$members = $this->_groupMembers($groupDN);
-		$members = array_keys($members); // uids are returned as keys
 		if(!is_array($members) || count($members) === 0) {
 			$this->access->connection->writeToCache($cacheKey, false);
 			return false;
@@ -1134,8 +1133,17 @@ class Group_LDAP extends BackendUtility implements \OCP\GroupInterface, IGroupLD
 		if ($this->groupPluginManager->implementsActions(GroupInterface::CREATE_GROUP)) {
 			if ($dn = $this->groupPluginManager->createGroup($gid)) {
 				//updates group mapping
-				$this->access->dn2ocname($dn, $gid, false);
-				$this->access->connection->writeToCache("groupExists".$gid, true);
+				$uuid = $this->access->getUUID($dn, false);
+				if(is_string($uuid)) {
+					$this->access->mapAndAnnounceIfApplicable(
+						$this->access->getGroupMapper(),
+						$dn,
+						$gid,
+						$uuid,
+						false
+					);
+					$this->access->connection->writeToCache("groupExists" . $gid, true);
+				}
 			}
 			return $dn != null;
 		}
diff --git a/apps/user_ldap/lib/ILDAPUserPlugin.php b/apps/user_ldap/lib/ILDAPUserPlugin.php
index 9250830fc82c2168630b0d1f132782a8252652de..da896345da4f33e968d6ff6a22aef3bb54d33d4c 100644
--- a/apps/user_ldap/lib/ILDAPUserPlugin.php
+++ b/apps/user_ldap/lib/ILDAPUserPlugin.php
@@ -40,7 +40,7 @@ interface ILDAPUserPlugin {
 	 *
 	 * @param string $uid The UID of the user to create
 	 * @param string $password The password of the new user
-	 * @return bool
+	 * @return bool|string
 	 */
 	public function createUser($uid, $password);
 
diff --git a/apps/user_ldap/lib/LDAPProvider.php b/apps/user_ldap/lib/LDAPProvider.php
index 94793980b396f8c096dbb9e1c3fc5ce5149357c1..7a0c3cc9517e3e3f34fe67519387f801f7bbd1bf 100644
--- a/apps/user_ldap/lib/LDAPProvider.php
+++ b/apps/user_ldap/lib/LDAPProvider.php
@@ -182,8 +182,25 @@ class LDAPProvider implements ILDAPProvider, IDeletionFlagSupport {
 	public function getLDAPBaseUsers($uid) {
 		if(!$this->userBackend->userExists($uid)){
 			throw new \Exception('User id not found in LDAP');
-		}	
-		return $this->userBackend->getLDAPAccess($uid)->getConnection()->getConfiguration()['ldap_base_users'];
+		}
+		$access = $this->userBackend->getLDAPAccess($uid);
+		$bases = $access->getConnection()->ldapBaseUsers;
+		$dn = $this->getUserDN($uid);
+		foreach ($bases as $base) {
+			if($access->isDNPartOfBase($dn, [$base])) {
+				return $base;
+			}
+		}
+		// should not occur, because the user does not qualify to use NC in this case
+		$this->logger->info(
+			'No matching user base found for user {dn}, available: {bases}.',
+			[
+				'app' => 'user_ldap',
+				'dn' => $dn,
+				'bases' => $bases,
+			]
+		);
+		return array_shift($bases);
 	}
 	
 	/**
@@ -196,7 +213,8 @@ class LDAPProvider implements ILDAPProvider, IDeletionFlagSupport {
 		if(!$this->userBackend->userExists($uid)){
 			throw new \Exception('User id not found in LDAP');
 		}
-		return $this->userBackend->getLDAPAccess($uid)->getConnection()->getConfiguration()['ldap_base_groups'];
+		$bases = $this->userBackend->getLDAPAccess($uid)->getConnection()->ldapBaseGroups;
+		return array_shift($bases);
 	}
 	
 	/**
diff --git a/apps/user_ldap/lib/User_LDAP.php b/apps/user_ldap/lib/User_LDAP.php
index cdbc2e9b35002645c7ec644ed13024ab72ca95bb..dd6e56a67fa2dfa10184e2b7f64f4871fcac9c69 100644
--- a/apps/user_ldap/lib/User_LDAP.php
+++ b/apps/user_ldap/lib/User_LDAP.php
@@ -382,18 +382,21 @@ class User_LDAP extends BackendUtility implements \OCP\IUserBackend, \OCP\UserIn
 	*/
 	public function deleteUser($uid) {
 		if ($this->userPluginManager->canDeleteUser()) {
-			return $this->userPluginManager->deleteUser($uid);
+			$status = $this->userPluginManager->deleteUser($uid);
+			if($status === false) {
+				return false;
+			}
 		}
 
 		$marked = $this->ocConfig->getUserValue($uid, 'user_ldap', 'isDeleted', 0);
 		if((int)$marked === 0) {
 			\OC::$server->getLogger()->notice(
 				'User '.$uid . ' is not marked as deleted, not cleaning up.',
-				array('app' => 'user_ldap'));
+				['app' => 'user_ldap']);
 			return false;
 		}
 		\OC::$server->getLogger()->info('Cleaning up after user ' . $uid,
-			array('app' => 'user_ldap'));
+			['app' => 'user_ldap']);
 
 		$this->access->getUserMapper()->unmap($uid); // we don't emit unassign signals here, since it is implicit to delete signals fired from core
 		$this->access->userManager->invalidate($uid);
@@ -620,8 +623,26 @@ class User_LDAP extends BackendUtility implements \OCP\IUserBackend, \OCP\UserIn
 		if ($this->userPluginManager->implementsActions(Backend::CREATE_USER)) {
 			if ($dn = $this->userPluginManager->createUser($username, $password)) {
 				if (is_string($dn)) {
-					//updates user mapping
-					$this->access->dn2ocname($dn, $username, true);
+					// the NC user creation work flow requires a know user id up front
+					$uuid = $this->access->getUUID($dn, true);
+					if(is_string($uuid)) {
+						$this->access->mapAndAnnounceIfApplicable(
+							$this->access->getUserMapper(),
+							$dn,
+							$username,
+							$uuid,
+							true
+						);
+						$this->access->cacheUserExists($username);
+					} else {
+						\OC::$server->getLogger()->warning(
+							'Failed to map created LDAP user with userid {userid}, because UUID could not be determined',
+							[
+								'app' => 'user_ldap',
+								'userid' => $username,
+							]
+						);
+					}
 				} else {
 					throw new \UnexpectedValueException("LDAP Plugin: Method createUser changed to return the user DN instead of boolean.");
 				}
diff --git a/settings/Controller/UsersController.php b/settings/Controller/UsersController.php
index 55ef267d8b7ea705c57757064c7b7e23df834224..93cc040de62e25501c98409100d87cb8b1ed7b4e 100644
--- a/settings/Controller/UsersController.php
+++ b/settings/Controller/UsersController.php
@@ -246,6 +246,8 @@ class UsersController extends Controller {
 		// Settings
 		$serverData['defaultQuota'] = $defaultQuota;
 		$serverData['canChangePassword'] = $canChangePassword;
+		$serverData['newUserGenerateUserID'] = $this->config->getAppValue('core', 'newUser.generateUserID', 'no') === 'yes';
+		$serverData['newUserRequireEmail'] = $this->config->getAppValue('core', 'newUser.requireEmail', 'no') === 'yes';
 
 		return new TemplateResponse('settings', 'settings-vue', ['serverData' => $serverData]);
 	}
diff --git a/settings/js/vue-7.js b/settings/js/vue-7.js
index bf223efef6d9fffedd24f1f44097f7b27bda568d..17d0ac995a344a8d56e694843b5b6d0ff3c79b6e 100644
GIT binary patch
delta 257
zcmdlqo$1^RrVTTKd`dDhi}i|AOG+~H(u?)-Qp-b&Q;XbF^HPfvOHx5>PZ#@Cy%G&2
zm>MM=rSQz09EGG*g~Za5{B)?&6eUfo$-BIyCT|ML(bY-GEKW?yNlmdL!uZJwQ8JsY
zf;Cx{Yih764@xa8%`8fF%}vbAnVc9VySX94jE^@|BUQ7yD7B=tC{H7F^5L`xjLw^v
uq+exY4BcFnm&C_kY3rYqm6}|lk*t@fso^|%zNF)3o!T%y#>&af-TDA>0$`;8

delta 102
zcmV-s0Ga>Jm;$nw0<f4;lT9ZOlgdg8lm1d{lTlS1v$Inv1(QH09kU!+HVzF#C}k;o
za%FUNa&9O?lV4}x0eQ1PXw?P*L$eldVh#^gJx^k4Wn*+GV=iGSD0!2g89}qieO3+u
IRg)i#FUXc93;+NC

diff --git a/settings/js/vue-7.js.map b/settings/js/vue-7.js.map
index 4aa8c937e7cb5b1692e59f2fb049f79aafe72dfa..cbf315d3e2e6916af49c83d7dac9b78d4391fafd 100644
GIT binary patch
delta 5587
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
Mq@Hz%{V)Fi0()j<2LJ#7

delta 4942
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
N?bq6tp``sS^gqBykx&2t

diff --git a/settings/js/vue-settings-apps-users-management.js b/settings/js/vue-settings-apps-users-management.js
index 8c43ef032f0d54627a03ba153a24cef7ba97474e..5bfc54bc97e707e5e0328900f6d1bd3b213714de 100644
GIT binary patch
delta 54
zcmZo};hEjS)6l}Wg(>TXL`_YJUP@v~qF#P-F@zCXoLc1RGClAjli~CUH<>uMFS)@K
GuL%G*?-bDh

delta 29
lcmbQ;!qeQs)6l}Wg(>UC^uUWuhSLphGjVR;bAu^f69BMA3#tGB

diff --git a/settings/js/vue-settings-apps-users-management.js.map b/settings/js/vue-settings-apps-users-management.js.map
index aa59c71f6d13b5f6da88c6f6837e8e5166c02316..4a8bebb6660bf486c295dfde59e1060eb608c566 100644
GIT binary patch
delta 3338
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

delta 3249
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

